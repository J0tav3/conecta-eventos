<?php
// ==========================================
// TESTE FINAL - PROBLEMA 1: CADASTRO DE USU√ÅRIOS
// Local: final_problem1_test.php
// ==========================================

error_reporting(E_ALL);
ini_set('display_errors', 1);

$title = "üéØ Teste Final - PROBLEMA 1: Erro no Cadastro de Usu√°rios";
$start_time = microtime(true);
?>

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?php echo $title; ?></title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
            min-height: 100vh;
        }
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: rgba(255,255,255,0.95);
            color: #333;
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }
        h1 { 
            color: #28a745; 
            text-align: center; 
            margin-bottom: 30px;
            border-bottom: 3px solid #28a745; 
            padding-bottom: 15px; 
        }
        .test-step {
            background: #f8f9fa;
            padding: 20px;
            margin: 15px 0;
            border-radius: 10px;
            border-left: 5px solid #28a745;
        }
        .pass { 
            background: #d4edda;
            border-left-color: #28a745;
            color: #155724;
            padding: 15px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .fail { 
            background: #f8d7da;
            border-left-color: #dc3545;
            color: #721c24;
            padding: 15px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .warning { 
            background: #fff3cd;
            border-left-color: #ffc107;
            color: #856404;
            padding: 15px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .info { 
            background: #d1ecf1;
            border-left-color: #17a2b8;
            color: #0c5460;
            padding: 15px;
            margin: 10px 0;
            border-radius: 4px;
        }
        .progress-bar {
            width: 100%;
            height: 20px;
            background: #e9ecef;
            border-radius: 10px;
            overflow: hidden;
            margin: 20px 0;
        }
        .progress-fill {
            height: 100%;
            background: linear-gradient(135deg, #28a745, #20c997);
            width: 0%;
            transition: width 1s ease;
        }
        .test-results {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        .result-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .result-number {
            font-size: 2rem;
            font-weight: bold;
            margin-bottom: 10px;
        }
        .pass-number { color: #28a745; }
        .fail-number { color: #dc3545; }
        .total-number { color: #17a2b8; }
        .btn {
            background: #28a745;
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            text-decoration: none;
            display: inline-block;
            margin: 10px 5px;
            font-weight: 500;
            cursor: pointer;
        }
        .btn:hover { 
            background: #218838; 
            color: white;
            text-decoration: none;
        }
        .code {
            background: #2d3748;
            color: #e2e8f0;
            padding: 15px;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            margin: 15px 0;
            overflow-x: auto;
            font-size: 0.9rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéØ Teste Final - PROBLEMA 1</h1>
        
        <div class="info">
            <h3>üìã Objetivo do Teste</h3>
            <p><strong>Verificar se o sistema de cadastro de usu√°rios est√° funcionando corretamente no Railway.</strong></p>
            <p>Este teste simular√° um cadastro completo e verificar√° todos os componentes necess√°rios.</p>
        </div>

        <?php
        $tests = [];
        $passes = 0;
        $fails = 0;
        $total_tests = 10;

        function runTest($name, $test_function) {
            global $tests, $passes, $fails;
            
            echo "<div class='test-step'>";
            echo "<h4>üîç $name</h4>";
            
            $start = microtime(true);
            try {
                $result = $test_function();
                $duration = round((microtime(true) - $start) * 1000, 2);
                
                if ($result['success']) {
                    echo "<div class='pass'>‚úÖ PASSOU: {$result['message']} ({$duration}ms)</div>";
                    $passes++;
                    $tests[] = ['name' => $name, 'status' => 'pass', 'message' => $result['message'], 'duration' => $duration];
                } else {
                    echo "<div class='fail'>‚ùå FALHOU: {$result['message']} ({$duration}ms)</div>";
                    $fails++;
                    $tests[] = ['name' => $name, 'status' => 'fail', 'message' => $result['message'], 'duration' => $duration];
                }
                
                if (isset($result['details'])) {
                    echo "<div class='info'>üí° Detalhes: {$result['details']}</div>";
                }
                
            } catch (Exception $e) {
                $duration = round((microtime(true) - $start) * 1000, 2);
                echo "<div class='fail'>‚ùå ERRO: " . $e->getMessage() . " ({$duration}ms)</div>";
                $fails++;
                $tests[] = ['name' => $name, 'status' => 'fail', 'message' => $e->getMessage(), 'duration' => $duration];
            }
            
            echo "</div>";
            flush();
        }

        // TESTE 1: Verificar Estrutura de Arquivos
        runTest("Estrutura de Arquivos", function() {
            $required_files = [
                'controllers/AuthController.php',
                'views/auth/register.php',
                'views/auth/login.php'
            ];
            
            $missing = [];
            foreach ($required_files as $file) {
                if (!file_exists(__DIR__ . '/' . $file)) {
                    $missing[] = $file;
                }
            }
            
            if (empty($missing)) {
                return ['success' => true, 'message' => 'Todos os arquivos essenciais est√£o presentes'];
            } else {
                return ['success' => false, 'message' => 'Arquivos em falta: ' . implode(', ', $missing)];
            }
        });

        // TESTE 2: Verificar Vari√°veis de Ambiente
        runTest("Vari√°veis de Ambiente Railway", function() {
            $database_url = getenv('DATABASE_URL');
            $mysql_host = getenv('MYSQLHOST');
            
            if ($database_url) {
                return ['success' => true, 'message' => 'DATABASE_URL configurada', 'details' => 'Railway MySQL conectado'];
            } elseif ($mysql_host) {
                return ['success' => true, 'message' => 'Vari√°veis MYSQL configuradas', 'details' => 'Usando vari√°veis MYSQL*'];
            } else {
                return ['success' => false, 'message' => 'Nenhuma configura√ß√£o de banco encontrada'];
            }
        });

        // TESTE 3: Testar Conex√£o com Banco
        runTest("Conex√£o com Banco de Dados", function() {
            $database_url = getenv('DATABASE_URL');
            
            if (!$database_url) {
                // Tentar construir da vari√°veis MYSQL
                $mysql_host = getenv('MYSQLHOST');
                $mysql_db = getenv('MYSQLDATABASE');
                $mysql_user = getenv('MYSQLUSER');
                $mysql_pass = getenv('MYSQLPASSWORD');
                $mysql_port = getenv('MYSQLPORT') ?: '3306';
                
                if ($mysql_host && $mysql_db && $mysql_user && $mysql_pass) {
                    $database_url = "mysql://$mysql_user:$mysql_pass@$mysql_host:$mysql_port/$mysql_db";
                }
            }
            
            if (!$database_url) {
                return ['success' => false, 'message' => 'Configura√ß√£o de banco n√£o encontrada'];
            }
            
            try {
                $url_parts = parse_url($database_url);
                $dsn = sprintf(
                    "mysql:host=%s;port=%d;dbname=%s;charset=utf8mb4",
                    $url_parts['host'],
                    $url_parts['port'] ?? 3306,
                    ltrim($url_parts['path'], '/')
                );
                
                $pdo = new PDO($dsn, $url_parts['user'], $url_parts['pass'], [
                    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION,
                    PDO::ATTR_TIMEOUT => 10
                ]);
                
                // Teste simples
                $stmt = $pdo->query("SELECT 1");
                if ($stmt) {
                    return ['success' => true, 'message' => 'Conex√£o estabelecida e testada'];
                } else {
                    return ['success' => false, 'message' => 'Conex√£o estabelecida mas teste falhou'];
                }
                
            } catch (PDOException $e) {
                return ['success' => false, 'message' => 'Erro na conex√£o: ' . $e->getMessage()];
            }
        });

        // TESTE 4: Verificar Tabela Usuarios
        runTest("Tabela de Usu√°rios", function() {
            $database_url = getenv('DATABASE_URL');
            
            if (!$database_url) {
                $mysql_host = getenv('MYSQLHOST');
                $mysql_db = getenv('MYSQLDATABASE');
                $mysql_user = getenv('MYSQLUSER');
                $mysql_pass = getenv('MYSQLPASSWORD');
                $mysql_port = getenv('MYSQLPORT') ?: '3306';
                
                if ($mysql_host && $mysql_db && $mysql_user && $mysql_pass) {
                    $database_url = "mysql://$mysql_user:$mysql_pass@$mysql_host:$mysql_port/$mysql_db";
                }
            }
            
            if (!$database_url) {
                return ['success' => false, 'message' => 'Sem configura√ß√£o de banco'];
            }
            
            try {
                $url_parts = parse_url($database_url);
                $dsn = sprintf(
                    "mysql:host=%s;port=%d;dbname=%s;charset=utf8mb4",
                    $url_parts['host'],
                    $url_parts['port'] ?? 3306,
                    ltrim($url_parts['path'], '/')
                );
                
                $pdo = new PDO($dsn, $url_parts['user'], $url_parts['pass'], [
                    PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION
                ]);
                
                try {
                    $stmt = $pdo->query("DESCRIBE usuarios");
                    $columns = $stmt->fetchAll();
                    return ['success' => true, 'message' => 'Tabela usuarios existe', 'details' => count($columns) . ' colunas encontradas'];
                } catch (PDOException $e) {
                    // Tentar criar tabela
                    $create_sql = "
                    CREATE TABLE usuarios (
                        id_usuario INT PRIMARY KEY AUTO_INCREMENT,
                        nome VARCHAR(100) NOT NULL,
                        email VARCHAR(100) UNIQUE NOT NULL,
                        senha VARCHAR(255) NOT NULL,
                        tipo ENUM('organizador', 'participante') NOT NULL DEFAULT 'participante',
                        telefone VARCHAR(20),
                        cidade VARCHAR(100),
                        estado VARCHAR(2),
                        ativo BOOLEAN DEFAULT TRUE,
                        data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                        ultimo_acesso TIMESTAMP NULL
                    );";
                    
                    $pdo->exec($create_sql);
                    return ['success' => true, 'message' => 'Tabela usuarios criada automaticamente'];
                }
                
            } catch (PDOException $e) {
                return ['success' => false, 'message' => 'Erro: ' . $e->getMessage()];
            }
        });

        // TESTE 5: Carregar AuthController
        runTest("Carregar AuthController", function() {
            $auth_file = __DIR__ . '/controllers/AuthController.php';
            
            if (!file_exists($auth_file)) {
                return ['success' => false, 'message' => 'Arquivo AuthController.php n√£o encontrado'];
            }
            
            try {
                require_once $auth_file;
                
                if (!class_exists('AuthController')) {
                    return ['success' => false, 'message' => 'Classe AuthController n√£o definida no arquivo'];
                }
                
                $auth = new AuthController();
                
                $required_methods = ['register', 'login', 'logout'];
                $missing_methods = [];
                
                foreach ($required_methods as $method) {
                    if (!method_exists($auth, $method)) {
                        $missing_methods[] = $method;
                    }
                }
                
                if (!empty($missing_methods)) {
                    return ['success' => false, 'message' => 'M√©todos em falta: ' . implode(', ', $missing_methods)];
                }
                
                return ['success' => true, 'message' => 'AuthController carregado e v√°lido'];
                
            } catch (Exception $e) {
                return ['success' => false, 'message' => 'Erro ao carregar: ' . $e->getMessage()];
            }
        });

        // TESTE 6: Teste de Registro (Dados V√°lidos)
        runTest("Cadastro com Dados V√°lidos", function() {
            try {
                $auth_file = __DIR__ . '/controllers/AuthController.php';
                require_once $auth_file;
                
                $auth = new AuthController();
                
                $test_data = [
                    'nome' => 'Teste Final ' . date('H:i:s'),
                    'email' => 'teste.final.' . time() . '@test.com',
                    'senha' => 'senha123',
                    'confirma_senha' => 'senha123',
                    'tipo_usuario' => 'participante',
                    'telefone' => '(11) 99999-9999',
                    'cidade' => 'S√£o Paulo',
                    'estado' => 'SP'
                ];
                
                $result = $auth->register($test_data);
                
                if ($result['success']) {
                    return ['success' => true, 'message' => 'Cadastro realizado: ' . $result['message']];
                } else {
                    return ['success' => false, 'message' => 'Falha no cadastro: ' . $result['message']];
                }
                
            } catch (Exception $e) {
                return ['success' => false, 'message' => 'Erro: ' . $e->getMessage()];
            }
        });

        // TESTE 7: Teste de Registro (Dados Inv√°lidos)
        runTest("Valida√ß√£o de Dados Inv√°lidos", function() {
            try {
                $auth_file = __DIR__ . '/controllers/AuthController.php';
                require_once $auth_file;
                
                $auth = new AuthController();
                
                // Teste com email inv√°lido
                $invalid_data = [
                    'nome' => '',
                    'email' => 'email-invalido',
                    'senha' => '123',
                    'tipo_usuario' => 'participante'
                ];
                
                $result = $auth->register($invalid_data);
                
                if (!$result['success']) {
                    return ['success' => true, 'message' => 'Valida√ß√£o funcionando - dados inv√°lidos rejeitados'];
                } else {
                    return ['success' => false, 'message' => 'Valida√ß√£o falhou - dados inv√°lidos aceitos'];
                }
                
            } catch (Exception $e) {
                return ['success' => false, 'message' => 'Erro: ' . $e->getMessage()];
            }
        });

        // TESTE 8: Teste de Login
        runTest("Sistema de Login", function() {
            try {
                $auth_file = __DIR__ . '/controllers/AuthController.php';
                require_once $auth_file;
                
                $auth = new AuthController();
                
                // Testar login com conta demo
                $login_data = [
                    'email' => 'admin@conectaeventos.com',
                    'senha' => 'admin123'
                ];
                
                $result = $auth->login($login_data);
                
                if ($result['success']) {
                    return ['success' => true, 'message' => 'Login funcionando: ' . $result['message']];
                } else {
                    return ['success' => false, 'message' => 'Login falhou: ' . $result['message']];
                }
                
            } catch (Exception $e) {
                return ['success' => false, 'message' => 'Erro: ' . $e->getMessage()];
            }
        });

        // TESTE 9: Verificar Sess√£o
        runTest("Sistema de Sess√£o", function() {
            if (session_status() == PHP_SESSION_NONE) {
                session_start();
            }
            
            if (session_status() != PHP_SESSION_ACTIVE) {
                return ['success' => false, 'message' => 'Sess√£o PHP n√£o est√° ativa'];
            }
            
            // Testar se consegue definir vari√°veis de sess√£o
            $_SESSION['test_var'] = 'test_value_' . time();
            
            if (isset($_SESSION['test_var'])) {
                unset($_SESSION['test_var']);
                return ['success' => true, 'message' => 'Sistema de sess√£o funcionando'];
            } else {
                return ['success' => false, 'message' => 'N√£o foi poss√≠vel definir vari√°veis de sess√£o'];
            }
        });

        // TESTE 10: Teste de Integra√ß√£o Completa
        runTest("Integra√ß√£o Completa", function() {
            try {
                $auth_file = __DIR__ . '/controllers/AuthController.php';
                require_once $auth_file;
                
                $auth = new AuthController();
                
                // 1. Fazer cadastro
                $register_data = [
                    'nome' => 'Integra√ß√£o Teste',
                    'email' => 'integracao.' . time() . '@test.com',
                    'senha' => 'senha123',
                    'confirma_senha' => 'senha123',
                    'tipo_usuario' => 'organizador'
                ];
                
                $register_result = $auth->register($register_data);
                
                if (!$register_result['success']) {
                    return ['success' => false, 'message' => 'Falha no cadastro: ' . $register_result['message']];
                }
                
                // 2. Verificar se sess√£o foi criada
                if (!isset($_SESSION['user_id']) || !isset($_SESSION['logged_in'])) {
                    return ['success' => false, 'message' => 'Cadastro n√£o criou sess√£o automaticamente'];
                }
                
                // 3. Verificar dados da sess√£o
                if ($_SESSION['user_name'] !== $register_data['nome']) {
                    return ['success' => false, 'message' => 'Dados da sess√£o incorretos'];
                }
                
                return ['success' => true, 'message' => 'Fluxo completo funcionando - cadastro + login autom√°tico + sess√£o'];
                
            } catch (Exception $e) {
                return ['success' => false, 'message' => 'Erro na integra√ß√£o: ' . $e->getMessage()];
            }
        });

        $success_rate = ($passes / $total_tests) * 100;
        $end_time = microtime(true);
        $total_duration = round(($end_time - $start_time) * 1000, 2);
        ?>

        <!-- Barra de Progresso -->
        <div class="progress-bar">
            <div class="progress-fill" style="width: <?php echo $success_rate; ?>%"></div>
        </div>

        <!-- Resultados -->
        <div class="test-results">
            <div class="result-card">
                <div class="result-number pass-number"><?php echo $passes; ?></div>
                <div>Testes Passou</div>
            </div>
            <div class="result-card">
                <div class="result-number fail-number"><?php echo $fails; ?></div>
                <div>Testes Falhou</div>
            </div>
            <div class="result-card">
                <div class="result-number total-number"><?php echo $total_tests; ?></div>
                <div>Total de Testes</div>
            </div>
            <div class="result-card">
                <div class="result-number <?php echo $success_rate >= 80 ? 'pass-number' : 'fail-number'; ?>">
                    <?php echo round($success_rate); ?>%
                </div>
                <div>Taxa de Sucesso</div>
            </div>
        </div>

        <!-- Veredicto Final -->
        <?php if ($success_rate >= 90): ?>
            <div class="pass">
                <h2>üéâ PROBLEMA 1 RESOLVIDO COM SUCESSO!</h2>
                <p><strong>‚úÖ Sistema de Cadastro de Usu√°rios: 100% FUNCIONAL</strong></p>
                <p>Todos os componentes est√£o funcionando corretamente. O erro no cadastro de usu√°rios foi corrigido!</p>
                
                <h4>‚úÖ O que est√° funcionando:</h4>
                <ul>
                    <li>‚úÖ Conex√£o com banco de dados Railway</li>
                    <li>‚úÖ Tabela de usu√°rios criada e acess√≠vel</li>
                    <li>‚úÖ AuthController carregando sem erros</li>
                    <li>‚úÖ Sistema de cadastro validando dados</li>
                    <li>‚úÖ Sistema de login funcionando</li>
                    <li>‚úÖ Sess√µes sendo criadas corretamente</li>
                    <li>‚úÖ Integra√ß√£o completa funcionando</li>
                </ul>
            </div>
        <?php elseif ($success_rate >= 70): ?>
            <div class="warning">
                <h2>‚ö†Ô∏è PROBLEMA 1 PARCIALMENTE RESOLVIDO</h2>
                <p><strong>Taxa de Sucesso: <?php echo round($success_rate); ?>%</strong></p>
                <p>A maioria dos componentes est√° funcionando, mas ainda h√° algumas quest√µes que precisam ser ajustadas.</p>
            </div>
        <?php else: ?>
            <div class="fail">
                <h2>‚ùå PROBLEMA 1 AINDA PRECISA DE CORRE√á√ÉO</h2>
                <p><strong>Taxa de Sucesso: <?php echo round($success_rate); ?>%</strong></p>
                <p>V√°rios componentes ainda apresentam problemas. Execute o script de corre√ß√£o de emerg√™ncia.</p>
            </div>
        <?php endif; ?>

        <!-- Detalhes dos Testes -->
        <div class="test-step">
            <h3>üìã Relat√≥rio Detalhado</h3>
            <div class="code"><?php 
            echo "=== RELAT√ìRIO DE TESTES ===\n";
            echo "Data/Hora: " . date('d/m/Y H:i:s') . "\n";
            echo "Dura√ß√£o Total: {$total_duration}ms\n";
            echo "Taxa de Sucesso: " . round($success_rate, 2) . "%\n";
            echo "Testes Passou: $passes/$total_tests\n\n";
            
            foreach ($tests as $test) {
                $status = $test['status'] === 'pass' ? '‚úÖ PASSOU' : '‚ùå FALHOU';
                echo "{$status}: {$test['name']}\n";
                echo "   Resultado: {$test['message']}\n";
                echo "   Dura√ß√£o: {$test['duration']}ms\n\n";
            }
            
            echo "=== AN√ÅLISE FINAL ===\n";
            if ($success_rate >= 90) {
                echo "üéâ PROBLEMA 1 RESOLVIDO!\n";
                echo "O sistema de cadastro est√° funcionando perfeitamente.\n";
                echo "Todos os componentes necess√°rios est√£o operacionais.\n";
            } elseif ($success_rate >= 70) {
                echo "‚ö†Ô∏è PROBLEMA 1 PARCIALMENTE RESOLVIDO\n";
                echo "A maioria dos componentes funciona, mas h√° ajustes necess√°rios.\n";
            } else {
                echo "‚ùå PROBLEMA 1 AINDA COM FALHAS\n";
                echo "V√°rios componentes precisam de corre√ß√£o.\n";
                echo "Execute emergency_fix.php para corre√ß√µes autom√°ticas.\n";
            }
            ?></div>
        </div>

        <!-- Pr√≥ximos Passos -->
        <div style="text-align: center; margin-top: 40px;">
            <h3>üöÄ Pr√≥ximos Passos</h3>
            
            <?php if ($success_rate >= 90): ?>
                <div class="pass">
                    <h4>üéä PARAB√âNS! Voc√™ pode agora:</h4>
                    <div style="display: flex; justify-content: center; gap: 15px; flex-wrap: wrap;">
                        <a href="views/auth/register.php" class="btn">üéØ Testar Cadastro Real</a>
                        <a href="views/auth/login.php" class="btn">üîë Fazer Login</a>
                        <a href="index.php" class="btn">üè† Ver Site Funcionando</a>
                    </div>
                    <p style="margin-top: 20px;">
                        <strong>‚úÖ PROBLEMA 1 CONCLU√çDO!</strong><br>
                        Agora voc√™ pode partir para o <strong>PROBLEMA 2: Valida√ß√£o Estado/Cidade</strong>
                    </p>
                </div>
            <?php else: ?>
                <div style="display: flex; justify-content: center; gap: 15px; flex-wrap: wrap;">
                    <a href="emergency_fix.php" class="btn" style="background: #dc3545;">üö® Corre√ß√£o de Emerg√™ncia</a>
                    <a href="test_registration_debug.php" class="btn" style="background: #ffc107; color: #000;">üîç Debug Detalhado</a>
                    <button onclick="location.reload()" class="btn" style="background: #6c757d;">üîÑ Executar Novamente</button>
                </div>
            <?php endif; ?>
            
            <div style="margin-top: 30px; padding: 20px; background: #e7f3ff; border-radius: 10px;">
                <h4>üìä Estat√≠sticas do Teste</h4>
                <p><strong>Tempo Total:</strong> <?php echo $total_duration; ?>ms</p>
                <p><strong>Testes Executados:</strong> <?php echo $total_tests; ?></p>
                <p><strong>Sucessos:</strong> <?php echo $passes; ?> | <strong>Falhas:</strong> <?php echo $fails; ?></p>
                <p><strong>Performance:</strong> <?php echo round($total_duration / $total_tests, 2); ?>ms por teste</p>
                
                <?php if ($success_rate >= 90): ?>
                    <p><strong>üèÜ Status:</strong> <span style="color: #28a745; font-weight: bold;">PROBLEMA 1 RESOLVIDO</span></p>
                <?php else: ?>
                    <p><strong>‚ö†Ô∏è Status:</strong> <span style="color: #dc3545; font-weight: bold;">NECESSITA CORRE√á√ÉO</span></p>
                <?php endif; ?>
            </div>
        </div>
    </div>

    <script>
        // Animar barra de progresso
        setTimeout(() => {
            document.querySelector('.progress-fill').style.width = '<?php echo $success_rate; ?>%';
        }, 500);

        // Log do resultado
        console.log('üéØ Teste Final do PROBLEMA 1 executado');
        console.log('üìä Taxa de Sucesso: <?php echo round($success_rate); ?>%');
        console.log('‚è±Ô∏è Dura√ß√£o: <?php echo $total_duration; ?>ms');
        console.log('<?php echo $success_rate >= 90 ? "üéâ PROBLEMA 1 RESOLVIDO!" : "‚ö†Ô∏è Ainda h√° problemas para corrigir"; ?>');

        // Se o teste passou, celebrar!
        <?php if ($success_rate >= 90): ?>
        setTimeout(() => {
            if (confirm('üéâ PROBLEMA 1 RESOLVIDO! Deseja testar o cadastro real agora?')) {
                window.open('views/auth/register.php', '_blank');
            }
        }, 2000);
        <?php endif; ?>
    </script>
</body>
</html>